plugins {
    id 'java-library'
    id 'org.ajoberstar.reckon' version '0.12.0'
    id 'jacoco'
    id 'io.freefair.lombok' version '5.0.0-rc6'
    id 'org.unbroken-dome.test-sets' version '3.0.0'
    id 'java-test-fixtures'
    id "org.sonarqube" version '2.8'
    id 'maven-publish'
    id 'signing'
    id 'io.codearte.nexus-staging' version '0.21.2'
    id 'de.marcphilipp.nexus-publish' version '0.4.0'
}

group = 'com.github.moaxcp'

sourceSets {
    demo {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}

configurations {
    demoImplementation.extendsFrom implementation
}

testSets {
    integrationTest
    demoTest
}

repositories {
    jcenter()
}

dependencies {
    api 'com.kohlschutter.junixsocket:junixsocket-core:2.3.2'

    demoImplementation sourceSets.main.output

    testImplementation enforcedPlatform('org.junit:junit-bom:5.5.2')
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    //https://github.com/openjdk/skara/pull/66
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.assertj:assertj-core:3.14.0'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.7'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.7'


    demoTestImplementation sourceSets.demo.output
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

jacoco {
    toolVersion = '0.8.5'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

reckon {
    scopeFromProp()
    snapshotFromProp()
}

test {
    useJUnitPlatform()

    reports {
        html.enabled = true
    }
}

integrationTest {
    useJUnitPlatform()

    reports {
        html.enabled = true
    }
}

demoTest {
    useJUnitPlatform()

    reports {
        html.enabled = true
    }
}

check.dependsOn integrationTest

task demoJar(type: Jar) {
    from sourceSets.demo.output
}

assemble.dependsOn demoJar

lombok {
    version = '1.18.12'
}

sonarqube {
    properties {
        properties["sonar.sources"] += sourceSets.demo.allSource.srcDirs.findAll { it.exists() }
        properties["sonar.sources"] += sourceSets.testFixtures.allSource.srcDirs.findAll { it.exists() }
        properties["sonar.tests"] += sourceSets.integrationTest.allSource.srcDirs.findAll { it.exists() }
        properties["sonar.tests"] += sourceSets.demoTest.allSource.srcDirs.findAll { it.exists() }

        properties['sonar.sourceEncoding'] = 'UTF-8'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.github.moaxcp.escher'
            artifactId = project.name
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = project.name
                description = project.description
                url = 'https://github.com/moaxcp/escher'
                licenses {
                    license {
                        name = 'GNU GENERAL PUBLIC LICENSE'
                        url = 'https://www.gnu.org/licenses/old-licenses/gpl-2.0.html'
                    }
                    license {
                        name = 'BSD-3-Clause'
                        url = 'https://opensource.org/licenses/BSD-3-Clause'
                    }
                }
                developers {
                    developer {
                        id = 'rabbit78'
                        name = 'Roman Kennke'
                        url = 'http://sourceforge.net/users/rabbit78'
                    }
                    developer {
                        id = 'stephent'
                        name = 'Stephen Tse'
                        url = 'http://sourceforge.net/users/stephent'
                    }
                    developer {
                        id = 'moaxcp'
                        name = 'John Mercier'
                        email = 'moaxcp@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/moaxcp/escher.git'
                    developerConnection = 'scm:git:git@github.com:moaxcp/escher.git'
                    url = 'https://github.com/moaxcp/escher'
                }
            }
            repositories {
                maven {
                    name = "OSS"
                    def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
                    def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                    credentials {
                        username = project.findProperty('nexus.username')
                        password = project.findProperty('nexus.password')
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

nexusStaging {
    username = System.getProperty('nexus.username')
    password = System.getProperty('nexus.password')
    packageGroup = 'com.github.moaxcp.escher'
}